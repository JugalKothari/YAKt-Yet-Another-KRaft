REGISTER BROKER RECORD
{
	"type": "metadata",
	"name": "RegisterBrokerRecord",
	"fields": {
		"internalUUID": "", 
		"brokerId": 0, 
		"brokerHost": "localhost", 
		"brokerPort": "9999", 
		"securityProtocol": "Telnet", 
		"rackId": 0,
		"brokerStatus": "ALIVE", 
		"epoch": 0 
	}
}

Topic Record
{
	"type": "metadata",
	"name": "TopicRecord",
	"fields": {
		"topicUUID": "",  
		"name": "Likes on Instagram Posts" 
	},
	"timestamp": ""
}

BROKER FETCH
{
	"brokerId": 0,
	"offset": "Mon, 20 Nov 2023 09:16:46 GMT" 
}

PARTITION RECORD
{
	"type": "metadata",
	"name": "PartitionRecord",
	"fields": {
		"partitionId": 0, // type: int
		"topicUUID": "",  // type: string
		"replicas": [], // type: []int; list of broker IDs with replicas
		"ISR": [], // type: []int; list of insync broker ids 
		"removingReplicas": [], // type: []int; list of replicas in process of removal
		"addingReplicas": [], // type: []int; list of replicas in the process of addition
		"leader": "", // type: string; uuid of broker who is leader for partition
		"partitionEpoch": 0 // type: int; number that incrementatlly changes with changes made to partition
	},
	"timestamp": "" // type: timestamp
}

PRODUCERIDSRECORD
{
	"type": "metadata",
	"name": "ProducerIdsRecord",
	"fields": {
		"brokerId": 0, // type : string; uuid of requesting broker
		"brokerEpoch": 0, // type : int; the epoch at which broker requested
		"producerId": 0 // type : int; producer id requested 
	},
	"timestamp": "" // type: timestamp
}

BROKER REGISTRATION CHANGE BROKER
{
	"type": "metadata",
	"name": "RegistrationChangeBrokerRecord",
	"fields": {
		"brokerId": 0, // type: string
		"brokerHost": "localhost", // type: string
		"brokerPort": "9999", // type: string
		"securityProtocol": "Telnet", // type: string
		"brokerStatus": "ALIVE", // type: string
		"epoch": 0 // type: int; epoch number given by the quorum controller
	},
	"timestamp": "" // type: timestamp
}

Delete Broker
{
	"brokerId": 0
}